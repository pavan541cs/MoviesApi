apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: moviesapi
  labels:
    app: moviesapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moviesapi
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/actuator/prometheus'
        prometheus.io/port: '8080'
      labels:
        app: moviesapi
    spec:
      containers:
        - name: app-container
          image: pavan541cs/moviesapp:1.0.0
          ports:
            - containerPort: 8080
          env:
            - name: MYSQL_HOST
              value: postgres
            - name: MYSQL_PORT
              value: '5432'

---

apiVersion: v1
kind: Service
metadata:
  name: moviesapi-svc
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/actuator/prometheus'
    prometheus.io/port: '8080'
  labels:
    app: moviesapi
spec:
  type: NodePort
  ports:
    - name: metricsprometheus
      targetPort: 8080
      port: 8080
  selector:
    app: moviesapi